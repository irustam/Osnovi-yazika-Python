__author__ = 'Искендеров Рустам Эльдарович'

# Задание-1:
# Реализуйте описаную ниже задачу, используя парадигмы ООП:
# В школе есть Классы(5А, 7Б и т.д.), в которых учатся Ученики.
# У каждого ученика есть два Родителя(мама и папа).
# Также в школе преподают Учителя. Один учитель может преподавать
# в неограниченном кол-ве классов свой определенный предмет.
# Т.е. Учитель Иванов может преподавать математику у 5А и 6Б,
# но больше математику не может преподавать никто другой.

# Выбранная и заполненная данными структура должна решать следующие задачи:
# 1. Получить полный список всех классов школы
# 2. Получить список всех учеников в указанном классе
#  (каждый ученик отображается в формате "Фамилия И.О.")
# 3. Получить список всех предметов указанного ученика
#  (Ученик --> Класс --> Учителя --> Предметы)
# 4. Узнать ФИО родителей указанного ученика
# 5. Получить список всех Учителей, преподающих в указанном классе
import random

class School:
    classes_lst = list()

    def __init__(self, classes_lst):
        self.classes_lst = classes_lst

    def get_students(self, class_id):
        stud_lst = []
        for cls in self.classes_lst:
            if cls.id == class_id:
                for st in cls.students_lst:
                    stud_lst.append(st.get_fio())
        return stud_lst

    def get_teachers(self, class_id):
        tc_lst =[]
        for cls in self.classes_lst:
            if cls.id == class_id:
                for tch in cls.teachers_lst:
                    tc_lst.append(tch.get_fio())
        return tc_lst

    def get_subjects(self, student_fio):
        subj_lst = []
        for cls in self.classes_lst:
            for std in cls.students_lst:
                if std.get_fio() == student_fio:
                    for tch in cls.teachers_lst:
                        subj_lst.append(tch.subject.name)
        return subj_lst

class Classes:
    id = str()
    students_lst = list()
    teachers_lst = list()

    def __init__(self, id):
        self.id = id



class Subjects:
    name = str()

    def __init__(self, name):
        self.name = name


class Humans:
    name = str()
    surname = str()
    patronymic = str()

    def __init__(self, surname, name, patronymic):
        self.name = name
        self.surname = surname
        self.patronymic = patronymic

    def get_fio(self):
        return f'{self.surname} {self.name[0]}.{self.patronymic[0]}.'


class Teachers(Humans):
    subject = str()

    def __init__(self, surname, name, patronymic, subject):
        Humans.__init__(self, surname, name, patronymic)
        self.subject = Subjects(subject)

class Parents(Humans):
    def __init__(self, surname, name, patronymic):
        Humans.__init__(self, surname, name, patronymic)

class Students(Humans):
    myparents = list()

    def __init__(self, surname, name, patronymic, parent1, parent2):
        Humans.__init__(self, surname, name, patronymic)
        self.myparents = [parent1, parent2]

    def get_parents(self):
        return f'Parents: {self.myparents[0].get_fio()}, {self.myparents[1].get_fio()}'


#Генерируем 5 классов в школе
myschool = []
clid = []
for _ in range(25):
    for i in random.choice(list(map(chr, range(ord('А'), ord('В')+1)))):
        clid.append(str(random.randint(1, 11)) + i)
clid = list(set(clid))[:5]
for itm in clid:
    myschool.append(Classes(itm))
myschool = School(myschool)

#Сгенерировали

#Генерируем людей
humans_lst = ['Блажевич Игорь Юрьевич',
            'Валиева Руфина Рафаэлевна',
            'Волошина Виктория Сергеевна',
            'Дробышев Александр Сергеевич',
            'Калашников Максим Эдуардович',
            'Козаев Валерий Олегович',
            'Кочнев Никита Дмитриевич',
            'Кузнецов Иван Анатольевич',
            'Лутовинова Надежда Александровна',
            'Мареев Никита Геннадьевич',
            'Молдованов Илья Владимирович',
            'Носиков Павел Николаевич',
            'Носков Николай Викторович',
            'Патрашкин Никита Алексеевич',
            'Писчасов Иван Александрович',
            'Пропажин Артём Алексеевич',
            'Сафонов Георгий Владимирович',
            'Синько Анастасия Константиновна',
            'Фельдшеров Сергей Дмитриевич',
            'Хазова Ксения Валентиновна',
            'Хомякова Юлия Дмитриевна',
            'Чебодаев Максим Иннокентьевич',
            'Шергин Иван Андреевич',
            'Щекалев Михаил Игоревич',
            'Юдаков Даниил Андреевич',
            'Ковпака Анисья Тимуровна',
            'Капшукова Эльвира Емельяновна',
            'Глазкова Альбина Ипполитовна',
            'Ульянов Вениамин Леонтиевич',
            'Егорова Анфиса Емельяновна',
            'Бузыцкова Доминика Ефимовна',
            'Гарин Алексей Панкратиевич',
            'Кунаева Диана Мироновна',
            'Цуринов Владислав Епифанович',
            'Меншиков Якуб Захарович',
            'Дудинов Борислав Евстафиевич',
            'Янишин Модест Филиппович',
            'Муленко Евсей Ростиславович',
            'Летова Стела Василиевна',
            'Кулумбаева Полина Елизаровна',
            'Ланцова Екатерина Петровна',
            'Поникаров Святослав Ипатиевич',
            'Столярова Василиса Ипполитовна',
            'Компанец Максимильян Ильевич',
            'Землякова Кира Семеновна',
            'Танкова Ксения Игнатиевна',
            'Беляев Константин Мирославович',
            'Негуторова Агата Павеловна',
            'Ураков Кондрат Андронович',
            'Яна Лариса Виталиевна',
            'Явид Фока Ерофеевич',
            'Сидоров Юлиан Владимирович',
            'Аглеев Артур Ефремович',
            'Головаха Прокл Ермолаевич',
            'Кабанова Злата Виталиевна',
            'Мирнова Клара Ильевна',
            'Клименко Эмма Ивановна',
            'Юдачёва Кира Ростиславовна',
            'Кахманова Ярослав Титович',
            'Копейкина Эмилия Захаровна',
            'Аводков Демьян Вячеславович',
            'Калагина Регина Георгиевна',
            'Волков Валерьян Иосифович',
            'Барановский Демьян Игоревич',
            'Квартина Софья Тихоновна',
            'Шумилова Арина Юлиевна',
            'Пузанова Антонина Святославовна',
            'Керимбаева Алла Ираклиевна',
            'Курневича Владлена Кузьмевна',
            'Путинова Александра Федотовна',
            'Янибекова Таисия Марковна',
            'Помельников Клавдий Гордеевич',
            'Тюлепова Людмила Кузьмевна',
            'Круминь Михаил Федотович',
            'Крутой Светлана Андрияновна',
            'Батурина Марианна Семеновна',
            'Кутюков Ипполит Наумович',
            'Кудашова Дарья Станиславовна',
            'Сязи Таисия Мефодиевна',
            'Кутичев Тимофей Сократович',
            'Жиренкова Всеслава Ираклиевна',
            'Магазинер Лев Олегович',
            'Грош Егор Давидович',
            'Якунова Мирослава Трофимовна',
            'Серов Серафим Эмилевич',
            'Кружкова Людмила Тимофеевна',
            'Слукина Елизавета Данилевна',
            'Шаров Владлен Кондратиевич',
            'Ямбушев Данила Адамович',
            'Мирова Бронислава Романовна',
            'Лыкова Любава Степановна',
            'Конакова Вероника Василиевна',
            'Самошин Никон Леонидович',
            'Беломестный Инна Марковна',
            'Якубович Адам Проклович',
            'Икашев Евдоким Онисимович',
            'Корнилова Юнона Юлиевна',
            'Бебнева Ева Тимофеевна',
            'Ярославский Агафон Якубович',
            'Воробьёв Чеслав Игнатиевич',
            'Михалёв Фадей Измаилович',
            'Созонов Андрей Захарович',
            'Абрамович Данила Ульянович',
            'Мышкина Ирина Елизаровна',
            'Тарасова Валерия Ефимовна',
            'Григолюка Оксана Михеевна',
            'Шверник Гавриил Ильевич',
            'Ростова Альбина Афанасиевна',
            'Папанова Раиса Ипполитовна',
            'Рязанцева Тамара Емельяновна',
            'Волобуев Степан Сергеевич',
            'Андроников Борислав Иванович',
            'Широких Святослав Артемович',
            'Николаенко Рената Игнатиевна',
            'Трунин Остап Анатолиевич',
            'Кадников Гаврила Натанович',
            'Миронова Аза Глебовна',
            'Ахременко Анисья Владленовна',
            'Верясова Жанна Тимофеевна',
            'Разбойникова Марфа Владиленовна',
            'Солодский Рюрик Владимирович',
            'Гусева Алина Серафимовна',
            'Рязанова Елизавета Мироновна',
            'Толбаев Фома Маркович',
            'Масмеха Елизавета Алексеевна',]
myteachers_lst = ['Толбаева Лидия Анатолиевна'
                'Юркова Владислава Олеговна',
                'Молчанова Варвара Мироновна',
                'Элькина Василиса Казимировна',
                'Шерстов Лев Назарович',
                'Венедиктов Георгий Игнатиевич',
                'Грушанина Эвелина Ильевна',
                'Сиян Георгий Изяславович',
                'Моряков Аскольд Яковович',
                'Кузуба Инна Елисеевна',
                'Набиуллин Кузьма Самуилович',]

#25 учеников в школе с 2-мя родителями каждый
students_list = []
st_sum = 25
for i in range(st_sum):
    fio = humans_lst[i+25].split()
    parent1 = Parents(fio[0], fio[1], fio[2])
    fio = humans_lst[i+50].split()
    parent2 = Parents(fio[0], fio[1], fio[2])
    fio = humans_lst[i].split()
    students_list.append(Students(fio[0], fio[1], fio[2], parent1, parent2))

#По 5 учеников в каждый класс:

st_class = 5
i = 0
for class_itm in myschool.classes_lst:
    stlist = []
    for itm in range(i, st_class):
        stlist.append(students_list[itm])
    class_itm.students_lst = stlist
    i += 5
    st_class += 5


#10 учителей c 1 предметом каждый
subject_lst = ['алгебра', 'русский язык', 'литература', 'биология', 'химия', 'физика', 'черчение', 'английский язык', 'геометрия', 'труд']
teachers_lst = []
for key, itm in enumerate(subject_lst):
    fio = myteachers_lst[key].split()
    teachers_lst.append(Teachers(fio[0], fio[1], fio[2], itm))

#В каждый класс по 5 предметов
for class_itm in myschool.classes_lst:
    tchlst = []
    for _ in range(0, 6):
        tchlst.append(random.choice(teachers_lst))
    class_itm.teachers_lst = tchlst

# 1. Получить полный список всех классов школы
for itm in myschool.classes_lst: print(itm.id)
# 2. Получить список всех учеников в указанном классе
#  (каждый ученик отображается в формате "Фамилия И.О.")
for itm in myschool.classes_lst:
    print(itm.id, myschool.get_students(itm.id))

# 3. Получить список всех предметов указанного ученика
#  (Ученик --> Класс --> Учителя --> Предметы)
for itm in students_list[0:20:4]:
    print(itm.get_fio(), myschool.get_subjects(itm.get_fio()))

# 4. Узнать ФИО родителей указанного ученика
for itm in students_list[0:20:4]:
    print(itm.get_fio(), itm.get_parents())

# 5. Получить список всех Учителей, преподающих в указанном классе
for itm in myschool.classes_lst:
    print(itm.id, myschool.get_teachers(itm.id))